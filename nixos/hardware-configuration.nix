# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
	imports = [ 
		(modulesPath + "/installer/scan/not-detected.nix")
	];

	boot.initrd.availableKernelModules = [ "xhci_pci" "nvme" "usbhid" "usb_storage" "sd_mod" "sdhci_pci" ];
	boot.initrd.kernelModules = [ "i915" ];
	boot.kernelModules = [ "kvm-intel" ];
	boot.extraModulePackages = [ ];

	fileSystems."/" = { 
		device = "/dev/disk/by-uuid/4e6fe993-c132-4449-b642-4904eb411413";
		fsType = "btrfs";
		options = [ "subvol=@" ];
	};

	fileSystems."/boot" = { 
		device = "/dev/disk/by-uuid/E872-EB11";
		fsType = "vfat";
		options = [ "fmask=0077" "dmask=0077" ];
	};

#	swapDevices = [ {
#		device = "/dev/nvme0n1p5";
#	} ];

	# Enables DHCP on each ethernet and wireless interface. In case of scripted networking
	# (the default) this is the recommended approach. When using systemd-networkd it's
	# still possible to use this option, but it's recommended to use it in conjunction
	# with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
	networking.useDHCP = lib.mkDefault true;
	# networking.interfaces.enp0s20f0u2.useDHCP = lib.mkDefault true;
	# networking.interfaces.enp0s31f6.useDHCP = lib.mkDefault true;
	# networking.interfaces.wlp6s0.useDHCP = lib.mkDefault true;

	nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
	hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

	services.power-profiles-daemon.enable = false;
	hardware.graphics.enable = true;
	services.auto-cpufreq.enable = true;
	services.auto-cpufreq.settings = {
		battery = {
			governor = "powersave";
			turbo = "never";
		};

		charger = {
			governor = "performance";
			turbo = "auto";
		};
	};

	services.xserver.videoDrivers = [
		"i915"
		"intel"
	];
	services.thermald.enable = true;
}
